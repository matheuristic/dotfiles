# $HOME/.config/kak/kakrc - Kakoune config file

# Don't show an assistant graphic
set-option global ui_options ncurses_assistant=none

# Line numbers
add-highlighter global/number-lines number-lines -hlcursor
# Highlight FIXME/TODO/XXX keywords
add-highlighter global/fixme-todo-xxx regex \b(TODO|FIXME|XXX|NOTE)\b 0:default+rb
# Highlight trailing whitespace
add-highlighter global/trailing-whitespace regex \h+$ 0:Error
# Wrap long lines
add-highlighter global/wrap wrap -word -indent

# Colorscheme
colorscheme gruvbox

# <tab>/<s-tab> for insert completion selection
hook global InsertCompletionShow .* %{   map window insert <tab> <c-n>;   map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p> }

# Remove trailing whitespace, from https://github.com/occivink/config
def remove-trailing-whitespace -docstring "Remove trailing whitespace in buffer" %{
    try %{
        execute-keys -draft '%<a-s>ghgl<a-i><space>d'
        echo -markup "{Information}Removed trailing whitespace"
    } catch %{
        echo -markup "{Information}No trailing whitespace to remove"
    }
}

declare-user-mode bufs
map global bufs g ': buffer '                            -docstring "buffer goto"
map global bufs n ': buffer-next<ret>'                   -docstring "buffer next"
map global bufs p ': buffer-previous<ret>'               -docstring "buffer prev"
map global bufs d ': delete-buffer<ret>'                 -docstring "buffer del"
map global bufs r ': rename-buffer '                     -docstring "buffer rename"
map global bufs F ': format-buffer<ret>'                 -docstring "format buffer"
map global bufs W ': remove-trailing-whitespace<ret>'    -docstring "remove trailing whitespace"
map global bufs R ': autorestore-restore-buffer<ret>'    -docstring "restore buffer backup"

declare-user-mode git
map global git b ': repl tig blame -C "+%val{cursor_line}" -- "%val{buffile}"<ret>' -docstring "git blame selection"
map global git c ': git commit<ret>'                     -docstring "git commit"
map global git d ': git diff<ret>'                       -docstring "git diff"
map global git l ': repl tig log -- "%val{buffile}"<ret>' -docstring "git log (file)"
map global git L ': repl tig<ret>'                       -docstring "git log (project)"
map global git s ': repl tig status<ret>'                -docstring "git status"
map global git t ': git diff --staged<ret>'              -docstring "git diff (staged)"

declare-user-mode lint
map global lint e ': lint-enable<ret>'                   -docstring 'lint enable'
map global lint E ': lint-disable<ret>'                  -docstring 'lint disable'
map global lint l ': lint-buffer<ret>'                   -docstring 'lint buffer'
map global lint n ': lint-next-error<ret>'               -docstring 'lint next error'
map global lint p ': lint-prev-error<ret>'               -docstring 'lint prev error'
map global lint b ': b *lint-output*<ret>'               -docstring 'goto lint buffer'

declare-user-mode settings
map global settings o ': echo %opt{'                  -docstring 'echo option'
map global settings r ': echo %reg{'                  -docstring 'echo register'
map global settings v ': echo %val{'                  -docstring 'echo value'
map global settings O ': set-option '                 -docstring 'set option'
map global settings R ': set-register '               -docstring 'set register'

declare-user-mode visual
map global visual m ': add-highlighter global/show-matching show-matching<ret>'       -docstring "show matching brackets on"
map global visual M ': remove-highlighter global/show-matching<ret>'                  -docstring "show matching brackets off"
map global visual w ': add-highlighter global/show-whitespaces show-whitespaces<ret>' -docstring "show whitespace on"
map global visual W ': remove-highlighter global/show-whitespaces<ret>'               -docstring "show whitespace off"

# REPL
map global user r ': repl<ret>'                              -docstring "REPL create"
map global user s ': send-text<ret>'                         -docstring "REPL send text"
# Window system clipboard integration
map global user y "|%val{config}/bin/clip-copy.sh<ret>"      -docstring "clip-yank"
map global user P "!%val{config}/bin/clip-paste.sh<ret>"     -docstring "clip-paste before"
map global user p "<a-!>%val{config}/bin/clip-paste.sh<ret>" -docstring "clip-paste after"
map global user R "|%val{config}/bin/clip-paste.sh<ret>"     -docstring "clip-replace"
# Other
map global user c ': comment-line<ret>'                      -docstring "(un)comment sel using line comments"
map global user C ': comment-block<ret>'                     -docstring "(un)comment sel using block comments"
map global user e ': evaluate-commands %val{selection}<ret>' -docstring "evaluate region as kakoune commands"
# User modes
map global user b ': enter-user-mode bufs<ret>'              -docstring "⯈ buffers mode"
map global user L ': enter-user-mode lint<ret>'              -docstring "⯈ lint mode"
map global user S ': enter-user-mode settings<ret>'          -docstring "⯈ settings mode"
map global user V ': enter-user-mode visual<ret>'            -docstring "⯈ visual mode"

# LSP support
eval %sh{kak-lsp --kakoune -s $kak_session}                  # Not needed if you load it with plug.kak.
lsp-enable
map global user l ': enter-user-mode lsp<ret>'               -docstring '⯈ lsp mode'

# Load local Kakoune config file
try %{ source "%val{config}/local.kak" }
