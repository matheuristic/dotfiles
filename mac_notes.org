#+TITLE: Mac OS X Notes
* Applications
- [[https://www.google.com/chrome/][Chrome]]
- [[https://cyberduck.io/][Cyberduck]]
- [[https://www.devontechnologies.com/apps/devonthink][DevonThink Pro]] /(license needed)/
- [[https://discordapp.com/][Discord]]
- [[https://docs.docker.com/docker-for-mac/install/][Docker]]
- [[https://emacsformacosx.com/][Emacs for OS X]]
- [[https://www.mozilla.org/en-US/firefox/new/][Firefox]]
- [[https://github.com/git-up/GitUp][GitUp]] /(or use [[https://magit.vc/][Magit]] in Emacs)/
- [[https://www.toketaware.com/ithoughts-osx][iThoughts]] /(license needed or via App Store)/
- [[https://github.com/laurent22/joplin][Joplin]]
- [[https://jumpdesktop.com/][Jump Desktop]] /(paid)/
- [[http://kablock.com/][Ka-Block!]]
- [[https://www.macports.org/][MacPorts]]
- [[https://www.office.com/][Microsoft Office]] /(license needed)/
- [[https://docs.conda.io/en/latest/miniconda.html][Miniconda]]
- [[https://openvpn.net/vpn-server-resources/connecting-to-access-server-with-macos/][OpenVPN]] /(as needed)/
- [[https://www.getpostman.com/][Postman]]
- [[https://eggerapps.at/postico/][Postico]]
- [[https://qxmledit.org/][QXmlEdit]]
- [[https://racket-lang.org/][Racket]]
- [[https://www.royalapplications.com/ts/mac/features][Royal TSX]]
- [[https://slack.com/][Slack]]
- [[https://github.com/yihui/tinytex][TinyTeX]]
- [[https://github.com/aahung/Unshaky][Unshaky]] /(workaround for double keypress issue on butterfly keyboards)/
- [[https://github.com/Zettlr/Zettlr][Zettlr]] /(Zettelkasten Markdown editor)/
- [[https://www.zotero.org/][Zotero]]
* Application-specific configuration
** kitty
*** Using Option as Meta or Alt
- Set the ~macos_option_as_alt all~ option in the =~/.config/kitty.conf= file (replace ~left~ or ~right~ instead of ~all~ to only use the left or right Option key).
*** Syncing the kitty terminfo file to remote systems
- For a new server, options are to ssh in the first time with ~kitty +kitten ssh myserver~, to copy over the terminfo file with =infocmp xterm-kitty | ssh myserver tic -x -o \~/.terminfo /dev/stdin=, or to manually copy over the terminfo file to =~/.terminfo/x/xterm-kitty= on the server.
** MacPorts
***  Recommended packages
#+begin_example
aspell
aspell-dict-en
autoconf
automake
bat
clojure
dict
fish
fzf
htop
jq
mosh
notmuch
openjdk8 / openjdk11
qpdf
p7zip
ripgrep
rlwrap
tmux
unrar
wget
wordnet
xsv
#+end_example
*** Other useful but less used packages
#+begin_example
lftp
miller
tig
tin
#+end_example
*** Migration process after upgrading to a new version of OS X
- See instructions [[https://trac.macports.org/wiki/Migration][here]].
** friendly interactive shell (fish)
*** Setup
- [[https://github.com/fish-shell/fish-shell][fish]] can be installed via MacPorts.
- Set up terminal to use fish as the shell.
  - For [[https://sw.kovidgoyal.net/kitty/][kitty]], in =~/.config/kitty/kitty.conf=, set the shell to the installed fish binary with the ~--login~ option, i.e. add the line ~shell /path/to/bin/fish --login~ (modify ~/path/to/bin/fish~ as necessary).
  - For [[https://support.apple.com/guide/terminal/welcome/mac][Terminal]] or [[https://www.iterm2.com/][iterm2]], set up a profile that runs ~fish~ on start. For example, in the Terminal app open "Preferences > Profiles" and create a new profile, enable "Shell > Startup > Run Command" and set its value to the installed fish binary (with the ~--login~ option as necessary). Set the new profile as the default profile.
- [[https://github.com/jorgebucaran/fisher][fisher]] can be used to manage fish packages.
- If using the ~done~ fish package, install [[https://github.com/julienXX/terminal-notifier][terminal-notifier]] for notifications with icons. Download a release bundle, unzip the app to some path (e.g. ~/path/to/terminal-notifier.app~), create the following wrapper script (change the path as is necessary) and put it in one of the ~$PATH~ directories:
#+begin_src sh
#!/bin/bash

# Wrapper for the terminal-notifier app
# https://github.com/julienXX/terminal-notifier

/path/to/terminal-notifier.app/Contents/MacOS/terminal-notifier $@
#+end_src
*** Recommended packages
#+begin_example
franciscolourenco/done
jethrokuan/fzf
jethrokuan/z
jorgebucaran/fish-nvm
rafaelrinaldi/pure
#+end_example
** Clojure
- Clojure can be installed via MacPorts (install the ~clojure~ and one of the ~openjdk*~ packages). Java jar dependencies will be downloaded to =~/.m2= after running ~clojure~ the first time.
- For managing builds and dependencies, install ~lein~ which can be done manually. See the [[https://leiningen.org/][Leiningen website]] for instructions. Java jar dependencies will be downloaded to =~/.lein/self-installs=.
** TinyTex
*** Installation
- If using ~conda~, it's better to install via the command line ([[https://yihui.org/tinytex/#for-other-users][link]]).
- Install and remove packages using the ~tlmgr~ command line program ([[https://yihui.org/tinytex/#maintenance][link]]).
- Upgrading TexLive versions are easiest by fullying removing the =~/Library/TinyTex= directory and re-installing the currently installed packages which can be listed using ~tlmgr list | grep -e '^i' | cut -d ' ' -f 2 | sed -e 's/://g' | grep -v 'x86_64-darwin'~.
- If using the fish shell, add the following to the fish configuration file =~/.config/fish/config.fish= or a file it sources.
#+begin_example
# TinyTex
if test -d $HOME/Library/TinyTeX/bin/x86_64-darwin
    set PATH $HOME/Library/TinyTeX/bin/x86_64-darwin $PATH
end
#+end_example
*** Useful Tex packages
#+begin_example
amsfonts
amsmath
biber
booktabs
capt-of
epstopdf-pkg
fancyhdr
geometry
hyperref
pgf
pgfplots
ulem
wrapfig
xcolor
#+end_example
** R
*** Compiling C programs using Xcode 10+
- From Xcode 10 onwards (i.e. OS X 10.14 onwards), C headers are no longer installed to ~/usr/local/include~ rooted at the system root ~/~ by default.
- Headers are instead installed to a subsystem rooted at ~/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk~ (i.e. at ~/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include~).
- Compilation flags need to set to point to the approprate paths for R to properly compile C programs using Clang, e.g. see ~.R/Makevars~ file in this repository.
- For more information, see this [[https://thecoatlessprofessor.com/programming/cpp/r-compiler-tools-for-rcpp-on-macos/][blog post]].
- The above should be handled automatically in the [[https://cran.r-project.org/bin/macosx/][official R installer]] but needs to be done manually for R installed by other means, e.g. installing ~r-base~ via [[https://docs.conda.io/en/latest/miniconda.html][conda]].
* Usage tips
- ~Control-Command-Q~ locks the screen.
* Miscellany
** Command line reference
- [[https://github.com/jlevy/the-art-of-command-line][GitHub - jlevy/the-art-of-command-line: Master the command line, in one page]]
- [[https://github.com/Idnan/bash-guide][GitHub - Idnan/bash-guide: A guide to learn bash]]
- [[https://www.datascienceatthecommandline.com/][Data Science at the Command Line]]
** Package lists
- [[https://github.com/agarrharr/awesome-cli-apps][GitHub - agarrharr/awesome-cli-apps]]
- [[https://github.com/jondot/awesome-devenv][GitHub - jondot/awesome-devenv]]
- [[https://github.com/jorgebucaran/awesome-fish][GitHub - jorgebucaran/awesome-fish]]
- [[https://github.com/herrbischoff/awesome-macos-command-line][GitHub - herrbischoff/awesome-macos-command-line]]
- [[https://github.com/alebcay/awesome-shell][GitHub - alebcay/awesome-shell]]
- [[https://github.com/kahun/awesome-sysadmin][GitHub - kahun/awesome-sysadmin]]
- [[https://github.com/dbohdan/structured-text-tools][GitHub - dbohdan/structured-text-tools]]
** TSV utilities
eBay's [[https://github.com/eBay/tsv-utils][TSV utilities]] provide tooling for filtering, computing
statistics, joining and so on for large tabular data files (CSV, TSV).
Not in MacPorts but the project's Github page provides Linux and MacOS
binary releases that can be extracted to a directory in ~PATH~.
Alternatives are [[https://github.com/johnkerl/miller][miller]] or individual tools like [[https://github.com/BurntSushi/xsv][xsv]] and [[https://github.com/saulpw/visidata][Visidata]].
** Useful Python packages
Easiest to install via conda and create a symlink to the binary in
=~/miniconda3/envs/ENVNAME/bin= (the environment's =bin= directory)
within =~/.local/bin= (or some directory that is in ~PATH~).
- ~textract~ : Wrapper for tools extracting text from several document formats
- ~visidata~ : A command-line multitool for tabular data
For other good Python packages, see [[https://github.com/vinta/awesome-python][Awesome Python]].
